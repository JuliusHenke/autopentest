from langchain_community.document_loaders import WebBaseLoader
from langchain_community.embeddings import OpenAIEmbeddings
from langchain_pinecone import PineconeVectorStore

from dotenv import load_dotenv

# Load environment variables
load_dotenv()


# Load
def ingest(urls: [str], index_name: str):
    for url in urls:
        # Parse web page
        loader = WebBaseLoader(url)
        data = loader.load()

        # Split
        from langchain_text_splitters import RecursiveCharacterTextSplitter
        text_splitter = RecursiveCharacterTextSplitter(chunk_size=500, chunk_overlap=0)
        all_splits = text_splitter.split_documents(data)

        # Add to vectorDB
        vectorstore = PineconeVectorStore.from_documents(
            documents=all_splits, embedding=OpenAIEmbeddings(), index_name=index_name
        )
        retriever = vectorstore.as_retriever()


def ingest_injection_agent_docs():
    ingest(["https://github.com/sqlmapproject/sqlmap/wiki/Usage"], "injection-agent")


# Example usage
if __name__ == "__main__":
    ingest_injection_agent_docs()
