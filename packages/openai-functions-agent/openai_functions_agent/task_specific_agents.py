from typing import List

from dotenv import load_dotenv
from langchain_community.tools import ShellTool

from openai_functions_agent.ingest import ingest
from openai_functions_agent.tools.nist_nvd import search_cpe, search_cve, get_cve
from openai_functions_agent.tools.python_repl import python_repl
from openai_functions_agent.tools.tavily_search import tavily_search

# Load environment variables
load_dotenv()

shell_tool = ShellTool(ask_human_input=True)
# TODO how to deal with reverse shell?
common_tools = [tavily_search, shell_tool, python_repl]


class TaskSpecificAgent:
    def __init__(self, name: str, vector_db_namespace: str, system_prompt: str, tools: List,
                 document_urls=None):
        """
        A task-specific agent that is aligned to a specific task and has access to specific tools and documents.
        :param name: name of the agent
        :param vector_db_namespace: only lowercase and dash allowed by Pinecone vectorDB provider
        :param system_prompt: prompt for aligning the agent to task
        :param tools: tools that the agent can call
        :param document_urls: documents that are to be ingested into the vectorDB and later used by the agent
        """
        if document_urls is None:
            document_urls = []
        self.name = name
        self.vector_db_namespace = vector_db_namespace
        self.tools = tools
        self.system_prompt = system_prompt
        self.document_urls = document_urls

    def ingest_docs_into_vector_db(self):
        """
        Ingests the documents into the vectorDB
        """
        ingest(self.document_urls, self.vector_db_namespace)


broken_access_control_agent = TaskSpecificAgent(
    name="Broken Access Control",
    vector_db_namespace="broken-access-control",
    tools=common_tools,
    system_prompt=(
        "You are a worker tasked with identifying and exploiting broken access control."
        " Given the following user request, respond with the results and status."
    ),
    document_urls=[
        "https://owasp.org/Top10/A01_2021-Broken_Access_Control/",
        "https://portswigger.net/web-security/access-control",
        "https://portswigger.net/web-security/file-path-traversal",
        "https://cwe.mitre.org/data/definitions/22.html",  # CWE-22: Path Traversal
        "https://cwe.mitre.org/data/definitions/200.html",  # CWE-200: Information Exposure
        "https://cwe.mitre.org/data/definitions/285.html",  # CWE-285: Improper Authorization
        "https://cwe.mitre.org/data/definitions/352.html",  # CWE-352: Cross-Site Request Forgery (CSRF)
        "https://cwe.mitre.org/data/definitions/377.html",  # CWE-377: Insecure Temporary File
        "https://cwe.mitre.org/data/definitions/441.html",  # CWE-441: Unintended Proxy or Intermediary
        "https://cwe.mitre.org/data/definitions/566.html",  # CWE-566: Authorization Bypass Through User-Controlled Key
        "https://cwe.mitre.org/data/definitions/1275.html",  # CWE-1275: Sensitive Cookie Improper SameSite Attribute
    ]
)

cryptographic_failures_agent = TaskSpecificAgent(
    name="Cryptographic Failures",
    vector_db_namespace="cryptographic-failures",
    tools=common_tools,
    system_prompt=(
        "You are a worker tasked with identifying and exploiting cryptographic failures."
        " Given the following user request, respond with the results and status."
    ),
    document_urls=[
        "https://owasp.org/Top10/A02_2021-Cryptographic_Failures/",
        "https://cwe.mitre.org/data/definitions/261.html",  # CWE-261: Weak Encoding for Password
        "https://cwe.mitre.org/data/definitions/296.html",  # CWE-296: Improper Following Certificate's Chain of Trust
        "https://cwe.mitre.org/data/definitions/319.html",  # CWE-319: Cleartext Transmission of Sensitive Information
        "https://cwe.mitre.org/data/definitions/798.html",  # CWE-798: Use of Hard-coded Credentials
        "https://cwe.mitre.org/data/definitions/323.html",  # CWE-323: Reusing a Nonce, Key Pair in Encryption
        "https://cwe.mitre.org/data/definitions/324.html",  # CWE-324: Use of a Key Past its Expiration Date
        "https://cwe.mitre.org/data/definitions/325.html",  # CWE-325: Missing Required Cryptographic Step
        "https://cwe.mitre.org/data/definitions/327.html",  # CWE-327: Use of a Broken or Risky Cryptographic Algorithm
        "https://cwe.mitre.org/data/definitions/330.html",  # CWE-330: Use of Insufficiently Random Values
        "https://cwe.mitre.org/data/definitions/757.html",  # CWE-757: Algorithm Downgrade
    ]
)

injection_agent = TaskSpecificAgent(
    name="Injection",
    vector_db_namespace="injection",
    tools=common_tools,
    system_prompt=(
        "You are a worker tasked with identifying and exploiting injection vulnerabilities."
        " Given the following user request, respond with the results and status."
    ),
    document_urls=[
        "https://owasp.org/Top10/A03_2021-Injection/",
        "https://github.com/sqlmapproject/sqlmap/wiki/Usage",
        "https://portswigger.net/web-security/sql-injection",
        "https://portswigger.net/web-security/os-command-injection",
        "https://portswigger.net/web-security/xxe",
        "https://portswigger.net/web-security/nosql-injection",
        "https://cwe.mitre.org/data/definitions/20.html",  # CWE-20: Improper Input Validation
        "https://cwe.mitre.org/data/definitions/74.html",  # CWE-74: Injection
        "https://cwe.mitre.org/data/definitions/77.html",  # CWE-77: Command Injection
        "https://cwe.mitre.org/data/definitions/79.html",  # CWE-79: Cross-site Scripting (XSS)
        "https://cwe.mitre.org/data/definitions/89.html",  # CWE-89: SQL Injection
        "https://cwe.mitre.org/data/definitions/90.html",  # CWE-90: LDAP Injection
        "https://cwe.mitre.org/data/definitions/91.html",  # CWE-91: XML Injection (aka Blind XPath Injection)
        "https://cwe.mitre.org/data/definitions/93.html",  # CWE-93: CRLF Injection
        "https://cwe.mitre.org/data/definitions/94.html",  # CWE-94: Code Injection
        "https://cwe.mitre.org/data/definitions/98.html",  # CWE-98: PHP File Inclusion
        "https://cwe.mitre.org/data/definitions/99.html",  # CWE-99: Resource Injection
        "https://cwe.mitre.org/data/definitions/116.html",  # CWE-116: Improper Encoding or Escaping of Output
        "https://cwe.mitre.org/data/definitions/184.html",  # CWE-184: Incomplete List of Disallowed Inputs
        "https://cwe.mitre.org/data/definitions/610.html",  # CWE-610: Externally Controlled Reference to Another Sphere
    ],
)

insecure_design_agent = TaskSpecificAgent(
    # TODO add more tools and documentations
    name="Insecure Design",
    vector_db_namespace="insecure-design",
    tools=common_tools,
    system_prompt=(
        "You are a worker tasked with identifying and exploiting insecure design."
        " Given the following user request, respond with the results and status."
    ),
    document_urls=[
        "https://owasp.org/Top10/A04_2021-Insecure_Design/",
        "https://portswigger.net/web-security/file-upload",
        "https://cwe.mitre.org/data/definitions/642.html",  # CWE-642: External Control of Critical State Data
        "https://cwe.mitre.org/data/definitions/200.html",  # CWE-200: Information Exposure
        "https://cwe.mitre.org/data/definitions/522.html",  # CWE-522: Insufficiently Protected Credentials
        "https://cwe.mitre.org/data/definitions/269.html",  # CWE-269: Improper Privilege Management
        "https://cwe.mitre.org/data/definitions/311.html",  # CWE-311: Missing Encryption of Sensitive Data
        "https://cwe.mitre.org/data/definitions/923.html",  # CWE-923: Improper Restriction of Communication Channel
        "https://cwe.mitre.org/data/definitions/434.html",  # CWE-434: Unrestricted Upload of File with Dangerous Type
        "https://cwe.mitre.org/data/definitions/444.html",  # CWE-444: Inconsistent Interpretation of HTTP Requests
        "https://cwe.mitre.org/data/definitions/501.html",  # CWE-501: Trust Boundary Violation
        "https://cwe.mitre.org/data/definitions/579.html",  # CWE-579: J2EE Bad Practices: Direct Management Connections
        "https://cwe.mitre.org/data/definitions/602.html",  # CWE-602: Client-Side Enforcement of Server-Side Security
        "https://cwe.mitre.org/data/definitions/657.html",  # CWE-657: Violation of Secure Design Principles
        "https://cwe.mitre.org/data/definitions/799.html",  # CWE-799: Improper Control of Interaction Frequency
        "https://cwe.mitre.org/data/definitions/807.html",  # CWE-807: Reliance on Untrusted Inputs in Security Decision
        "https://cwe.mitre.org/data/definitions/841.html",  # CWE-841: Improper Enforcement of Behavioral Workflow
        "https://cwe.mitre.org/data/definitions/927.html",
        # CWE-927: Use of Implicit Intent for Sensitive Communication
    ]
)

security_misconfiguration_agent = TaskSpecificAgent(
    name="Security Misconfiguration",
    vector_db_namespace="security-misconfiguration",
    tools=common_tools,
    system_prompt=(
        "You are a worker tasked with identifying and exploiting security misconfigurations."
        " Given the following user request, respond with the results and status."
    ),
    document_urls=[
        "https://owasp.org/Top10/A05_2021-Security_Misconfiguration/",
        "https://cwe.mitre.org/data/definitions/11.html",  # CWE-11: ASP.NET Misconfiguration: Creating Debug Binary
        "https://cwe.mitre.org/data/definitions/15.html",  # CWE-15: External Control of System or Configuration Setting
        "https://cwe.mitre.org/data/definitions/522.html",  # CWE-522: Insufficiently Protected Credentials
        "https://cwe.mitre.org/data/definitions/312.html",  # CWE-312: Cleartext Storage of Sensitive Information
        "https://cwe.mitre.org/data/definitions/520.html",  # CWE-520: .NET Misconfiguration: Use of Impersonation
        "https://cwe.mitre.org/data/definitions/209.html",  # CWE-209: Error Message Containing Sensitive Information
        "https://cwe.mitre.org/data/definitions/540.html",  # CWE-540: Inclusion of Sensitive Information in Source Code
        "https://cwe.mitre.org/data/definitions/547.html",  # CWE-547: Use of Hard-coded, Security-relevant Constants
        "https://cwe.mitre.org/data/definitions/611.html",  # CWE-611: Restriction of XML External Entity Reference
        "https://cwe.mitre.org/data/definitions/942.html",  # CWE-942: Overly Permissive Cross-domain Whitelist
        "https://cwe.mitre.org/data/definitions/732.html",  # CWE-732: Incorrect Permission Assignment Critical Resource
    ]
)

vulnerable_and_outdated_components_agent = TaskSpecificAgent(
    name="Vulnerable and Outdated Components",
    vector_db_namespace="vulnerable-and-outdated-components",
    # TODO add msfconsole
    tools=common_tools + [search_cpe, search_cve, get_cve],
    system_prompt=(
        "You are a worker tasked with identifying and exploiting vulnerable and outdated components."
        " Given the following user request, respond with the results and status."
    ),
    document_urls=[
        "https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/",
        "https://www.offsec.com/metasploit-unleashed/msfconsole-commands/",
    ]
)

identification_and_authentication_failures_agent = TaskSpecificAgent(
    name="Identification and Authentication Failures",
    vector_db_namespace="identification-and-authentication-failures",
    tools=common_tools,
    system_prompt=(
        "You are a worker tasked with identifying and exploiting identification and authentication failures."
        " Given the following user request, respond with the results and status."
    ),
    document_urls=[
        "https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/",
        "https://cwe.mitre.org/data/definitions/798.html",  # CWE-798: Use of Hard-coded Credentials
        "https://cwe.mitre.org/data/definitions/287.html",  # CWE-287: Improper Authentication
        "https://cwe.mitre.org/data/definitions/288.html",  # CWE-288: Authentication Bypass Alternate Path or Channel
        "https://cwe.mitre.org/data/definitions/290.html",  # CWE-290: Authentication Bypass by Spoofing
        "https://cwe.mitre.org/data/definitions/294.html",  # CWE-294: Authentication Bypass by Capture-replay
        "https://cwe.mitre.org/data/definitions/295.html",  # CWE-295: Improper Certificate Validation
        "https://cwe.mitre.org/data/definitions/300.html",  # CWE-300: Channel Accessible by Non-endpoint
        "https://cwe.mitre.org/data/definitions/302.html",  # CWE-302: Authentication Bypass by Assumed-Immutable Data
        "https://cwe.mitre.org/data/definitions/306.html",  # CWE-306: Missing Authentication for Critical Function
        "https://cwe.mitre.org/data/definitions/307.html",  # CWE-307: Restriction of Excessive Authentication Attempts
        "https://cwe.mitre.org/data/definitions/346.html",  # CWE-346: Origin Validation Error
        "https://cwe.mitre.org/data/definitions/613.html",  # CWE-613: Insufficient Session Expiration
        "https://cwe.mitre.org/data/definitions/620.html",  # CWE-620: Unverified Password Change
        "https://cwe.mitre.org/data/definitions/640.html",  # CWE-640: Weak Password Recovery Mechanism
    ]
)

privilege_escalation_agent = TaskSpecificAgent(
    # TODO add more tools and documentations
    name="Privilege Escalation",
    vector_db_namespace="privilege-escalation",
    tools=common_tools,
    system_prompt=(
        "You are a worker tasked with escalating privileges from an already established initial foothold in a system."
        " Given the following user request, respond with the results and status."
    ),
    document_urls=[
        "https://portswigger.net/web-security/access-control",
        "https://book.hacktricks.xyz/linux-hardening/privilege-escalation"
    ]
)

generic_penetration_tester_agent = TaskSpecificAgent(
    # TODO add more tools and documentations
    name="Generic Penetration Tester",
    vector_db_namespace="generic-penetration-tester",
    tools=common_tools,
    system_prompt=(
        "You are a penetration tester."
        " Given the following user request, respond with the results and status."
    ),
    document_urls=[
        "https://portswigger.net/web-security/api-testing",
    ]
)

task_specific_agents = [broken_access_control_agent,
                        cryptographic_failures_agent,
                        injection_agent,
                        insecure_design_agent,
                        security_misconfiguration_agent,
                        vulnerable_and_outdated_components_agent,
                        identification_and_authentication_failures_agent,
                        privilege_escalation_agent,
                        generic_penetration_tester_agent]


def ingest_docs_of_all_task_specific_agents():
    for agent in task_specific_agents:
        agent.ingest_docs_into_vector_db()


# Example usage
if __name__ == "__main__":
    # ingest_docs_of_all_task_specific_agents()
    privilege_escalation_agent.ingest_docs_into_vector_db()
