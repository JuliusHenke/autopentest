import asyncio

from langchain import hub
from langchain.agents import create_openai_tools_agent, AgentExecutor
from langchain_community.agent_toolkits import PlayWrightBrowserToolkit
from langchain_community.tools.playwright.utils import (
    create_async_playwright_browser,  # A synchronous browser is available, though it isn't compatible with jupyter
)

from src.chat_completions import llm

async_browser = create_async_playwright_browser()
toolkit = PlayWrightBrowserToolkit.from_browser(async_browser=async_browser)
playwright_browser_tools = toolkit.get_tools()


# Example usage
async def main():
    prompt = hub.pull("hwchase17/openai-functions-agent")
    agent = create_openai_tools_agent(llm, playwright_browser_tools, prompt=prompt)
    executor = AgentExecutor(
        agent=agent,
        tools=playwright_browser_tools,
        verbose=True,
        return_intermediate_steps=True,
        early_stop_method="generate",
        handle_parsing_errors=True,
    )
    print(await executor.ainvoke({
        "input":
            "Go to https://google.com and print out all links that you find."
    }))

    tools_by_name = {tool.name: tool for tool in playwright_browser_tools}
    navigate_tool = tools_by_name["navigate_browser"]
    print(await navigate_tool.arun(
        {"url": "https://google.com"}
    ))


if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())
