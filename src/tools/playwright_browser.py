import asyncio

from langchain_community.agent_toolkits import PlayWrightBrowserToolkit
from langchain_community.tools.playwright.utils import (
    create_async_playwright_browser,  # A synchronous browser is available, though it isn't compatible with jupyter
)

from agents.agent_creation import llm, create_agent

async_browser = create_async_playwright_browser()
toolkit = PlayWrightBrowserToolkit.from_browser(async_browser=async_browser)
playwright_browser_tools = toolkit.get_tools()


# Example usage
async def main():
    print(await create_agent(llm, playwright_browser_tools, "You are a helpful assistant").ainvoke({
        "messages": [
            "Go to https://python.langchain.com/v0.2/docs/integrations/toolkits/playwright/ and give me summary of all tools mentioned on the page you get. Print out url at each step."
        ]
    }))

    tools_by_name = {tool.name: tool for tool in playwright_browser_tools}
    navigate_tool = tools_by_name["navigate_browser"]
    print(await navigate_tool.arun(
        {"url": "https://google.com"}
    ))


if __name__ == '__main__':
    loop = asyncio.get_event_loop()
    loop.run_until_complete(main())
