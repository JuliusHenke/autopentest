import os

from langchain_core.tools import tool
from langchain_experimental.utilities import PythonREPL

human_input_before_execution = os.environ.get("HUMAN_INPUT_BEFORE_EXECUTION", 'true') == "true"


@tool
def python_repl(commands: str, timeout: int = 60):
    """A Python shell. Use this to execute python commands or larger scripts.
    Input should be valid python code. Use a realistic timeout in seconds to mitigate indefinite blocking.
    If you want to see the output of a value, you should print it out with `print(...)`."""
    print(f"Executing commands:\n {commands}")
    try:
        if human_input_before_execution:
            user_input = input("Proceed with command execution? (y/n): ").lower()
            if user_input == "y":
                return PythonREPL().run(command=commands, timeout=timeout)
            else:
                return "I, the user, don't want to run this script. Try something different."
        else:
            return PythonREPL().run(command=commands, timeout=timeout)
    except Exception as e:
        return f"Error during command execution: {e}"
