from __future__ import annotations

from typing import Optional

from langchain_community.tools import CurrentWebPageTool
from langchain_core.callbacks import (
    AsyncCallbackManagerForToolRun,
    CallbackManagerForToolRun,
)


class CustomCurrentWebPageTool(CurrentWebPageTool):
    """Tool for getting the URL of the current webpage."""

    def _run(
            self,
            run_manager: Optional[CallbackManagerForToolRun] = None,
    ) -> str:
        try:
            return super()._run(run_manager=run_manager)
        except Exception as e:
            return str(e)

    async def _arun(
            self,
            run_manager: Optional[AsyncCallbackManagerForToolRun] = None,
    ) -> str:
        try:
            return await super()._arun(run_manager=run_manager)
        except Exception as e:
            return str(e)
